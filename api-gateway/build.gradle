plugins {
	id("com.palantir.docker") version "0.36.0"
}

ext {
	set('springCloudVersion', "2023.0.0")
}

group = 'com.giunne.api-gateway'
version = '0.0.1-SNAPSHOT'

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured:5.3.2'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.register("prepareKotlinBuildScriptModel"){}

docker {
	name "${rootProject.name}-${project.name}:${version}"
	dockerfile file('../Dockerfile')
	files(tasks.bootJar.outputs.files)
	buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}